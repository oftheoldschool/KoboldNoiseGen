#ifndef FNOISE_REP1
#define FNOISE_REP1(FN, ...) FN(0, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP2
#define FNOISE_REP2(FN, ...) FNOISE_REP1(FN, ##__VA_ARGS__) FN(1, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP3
#define FNOISE_REP3(FN, ...) FNOISE_REP2(FN, ##__VA_ARGS__) FN(2, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP4
#define FNOISE_REP4(FN, ...) FNOISE_REP3(FN, ##__VA_ARGS__) FN(3, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP5
#define FNOISE_REP5(FN, ...) FNOISE_REP4(FN, ##__VA_ARGS__) FN(4, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP6
#define FNOISE_REP6(FN, ...) FNOISE_REP5(FN, ##__VA_ARGS__) FN(5, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP7
#define FNOISE_REP7(FN, ...) FNOISE_REP6(FN, ##__VA_ARGS__) FN(6, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP8
#define FNOISE_REP8(FN, ...) FNOISE_REP7(FN, ##__VA_ARGS__) FN(7, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP9
#define FNOISE_REP9(FN, ...) FNOISE_REP8(FN, ##__VA_ARGS__) FN(8, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP10
#define FNOISE_REP10(FN, ...) FNOISE_REP9(FN, ##__VA_ARGS__) FN(9, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP11
#define FNOISE_REP11(FN, ...) FNOISE_REP10(FN, ##__VA_ARGS__) FN(10, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP12
#define FNOISE_REP12(FN, ...) FNOISE_REP11(FN, ##__VA_ARGS__) FN(11, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP13
#define FNOISE_REP13(FN, ...) FNOISE_REP12(FN, ##__VA_ARGS__) FN(12, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP14
#define FNOISE_REP14(FN, ...) FNOISE_REP13(FN, ##__VA_ARGS__) FN(13, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP15
#define FNOISE_REP15(FN, ...) FNOISE_REP14(FN, ##__VA_ARGS__) FN(14, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REP16
#define FNOISE_REP16(FN, ...) FNOISE_REP15(FN, ##__VA_ARGS__) FN(15, ##__VA_ARGS__)
#endif
#ifndef FNOISE_REPEAT
#define FNOISE_REPEAT(N, ...) FNOISE_REP ## N(__VA_ARGS__)
#endif

enum class FractalNoiseMetalType: int8_t {
    openSimplex2 = 0,
    voronoi = 1,
};

struct FractalNoiseMetalParameters {
    float lacunarity;
    float gain;

    float startingAmplitude;
    float startingFrequency;

    int octaves;
    int warpIterations;

    float warpScale;
    float coordinateScale;

    FractalNoiseMetalType noiseType;

    // OpenSimplex2 parameters
    int openSimplex2Seed;
    OpenSimplex2MetalNoise2Variant openSimplex2Noise2Variant;
    OpenSimplex2MetalNoise3Variant openSimplex2Noise3Variant;
    OpenSimplex2MetalNoise4Variant openSimplex2Noise4Variant;

    // Voronoi parameters
    int voronoiSeed;
    VoronoiMetalDistanceFunction voronoiDistanceFunction;
    VoronoiMetalReturnType voronoiReturnType;
    float voronoiJitter;
    float voronoiMinkowskiP;
};
